<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="member.dao.MemberDao">

	<resultMap type="member.dto.User" id="User">
		<id column="user_no" property="userNo" />
		<result column="user_email" property="userEmail" />
		<result column="user_pw" property="userPw" />
		<result column="user_nick" property="userNick" />
		<result column="user_type" property="userType" />
		<result column="charge_type_no" property="chargeTypeNo" />
	</resultMap>

  <select id="selectCntUser" parameterType="member.dto.User" resultType="int">
	SELECT count(*) FROM USER_INFO
	WHERE user_email = #{userEmail} AND user_pw = #{userPw}
  </select>
  
  <select id="selectCntEmail" resultType="int">
  	SELECT count(*) FROM USER_INFO
  	WHERE user_email = #{userEmail}
  </select>
  
  <select id="selectUserByEmail" parameterType="member.dto.User" resultMap="User">
  	SELECT user_no, charge_type_no, user_email, user_nick, user_type FROM USER_INFO
  	WHERE user_email = #{userEmail}
  </select>
  
  <insert id="insertUser" parameterType="member.dto.User">
  	INSERT INTO USER_INFO (USER_NO, CHARGE_TYPE_NO, USER_EMAIL, USER_PW, USER_NICK, USER_TYPE)
	VALUES (user_info_seq.nextval, #{chargeTypeNo}, #{userEmail}, #{userPw}, #{userNick}, 'member')
  </insert>
  
  <update id="updateToken" parameterType="member.dto.User">
  	UPDATE USER_INFO
  	SET token = #{token}
  	WHERE USER_EMAIL = #{userEmail}
  </update>
  
  <update id="updatePassword" parameterType="member.dto.User">
  	UPDATE USER_INFO
  	SET USER_PW = #{userPw}
  	WHERE TOKEN = #{token}
  </update>
  
  <delete id="deleteUser" parameterType="member.dto.User">
  	DELETE USER_INFO
  	WHERE user_email = #{userEmail} AND user_pw = #{userPw}  
  </delete>
  
  <update id="changeUserNick" parameterType="member.dto.User">
  	UPDATE USER_INFO
  	SET USER_NICK = #{userNick}
  	WHERE USER_EMAIL = #{userEmail}
  </update>
  
  <select id="checkCntPw" parameterType="member.dto.User" resultType="int">
  	SELECT count(*) FROM USER_INFO
  	WHERE USER_EMAIL = #{userEmail} AND USER_PW = #{userPw}
  </select>
  
  <update id="updatePw" parameterType="hashmap">
  	UPDATE USER_INFO
  	SET USER_PW = #{newPw}
  	WHERE USER_EMAIL = #{userEmail} AND USER_PW = #{userPw} 
  </update>
  
  <update id="updateChargeType" parameterType="member.dto.User">
  	UPDATE USER_INFO
  	SET CHARGE_TYPE_NO = #{chargeTypeNo}
  	WHERE USER_EMAIL = #{userEmail}
  </update>
  
  <select id="selectEmailByToken" resultType="String">
  	SELECT user_email
  	FROM USER_INFO
  	WHERE token = #{token}
  </select>

  <update id="updateTokenToVoid" parameterType="member.dto.User">
  	UPDATE USER_INFO
  	SET token = ''
  	WHERE USER_EMAIL = #{userEmail}
  </update>
  
  <select id="selectCntToken" resultType="int">
  	SELECT count(*)
  	FROM USER_INFO
  	WHERE TOKEN = #{token}
  </select>
    
  <select id="selectNoByEmail" resultType="int">
  	SELECT user_no
  	FROM USER_INFO
  	WHERE USER_EMAIL = #{userEmail}
  </select>
  
  <select id="selectFavoriteByNo" resultType="member.dto.Favorite">
  	SELECT FAVORITE_NO, USER_NO, EI.STATION_NO, EI.STATION_NAME, EI.STATION_LOC, EI.STATION_LATITUDE, EI.STATION_LONGITUDE FROM FAVORITE_LIST FV
	INNER JOIN EVSTATION_INFO EI on EI.STATION_NO = FV.STATION_NO
	WHERE user_no = #{userNo}
	ORDER BY FAVORITE_NO
  </select>
  
  <select id="selectChargeTypeName" resultType="String">
  	SELECT CHARGE_TYPE
  	FROM CAR_INFO
  	WHERE CHARGE_TYPE_NO = #{chargeTypeNo}
  </select>
  
</mapper>